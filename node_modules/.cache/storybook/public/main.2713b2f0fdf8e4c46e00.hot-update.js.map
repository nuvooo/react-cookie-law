{"version":3,"file":"main.2713b2f0fdf8e4c46e00.hot-update.js","sources":["webpack:///./helper.tsx","webpack:///./index.tsx","webpack:///./stories/cookie.stories.tsx","webpack:///./styles.tsx"],"sourcesContent":["// HELPER COOKIE GET & SET\n\nexport function getCookie(cname: string) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nexport function setCookie(cname: string, cvalue: string, exdays: number) {\n    const d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    let expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n","import React from 'react';\nimport { CookieWrapper, CookieHeadline, CookieBody, CookieRow, CookieButton, CookieCustomise, CookieCheckbox, CookieFormGroup } from './styles';\nimport { getCookie, setCookie } from './helper';\n\nexport interface CookieProps {\n    onAcceptPreferences?: () => void;\n    onAcceptStatistics?: () => void;\n    onAcceptMarketing?: () => void;\n    onAccept?: () => void;\n    /**\n     * Direction\n     */\n    cookieDirection: Direction;\n    /**\n     * Background Color\n     */\n    backgroundColor?: string;\n    cookieMessage: string;\n    cookieHeadline: string;\n    cookieAcceptButtonText?: string;\n    cookieCustomiseButtonText?: string;\n    cookieSelectedAcceptButtonText?: string;\n    necessaryText?: string;\n    preferencesText?: string;\n    statisticsText?: string;\n    marketingText?: string;\n    necessaryDescription?: string;\n    preferencesDescription?: string;\n    statisticsDescription?: string;\n    marketingDescription?: string;\n    policyLink?: string;\n    policyLinkText?: string;\n    setPreferencesOption?:boolean;\n    setMarketingOption?:boolean;\n    setStatisticsOption?:boolean;\n}\nexport type Direction = 'Top' | 'Bottom' | 'Center';\n\nconst CookieLaw: React.FC<CookieProps> = ({\n    cookieDirection = \"Bottom\",\n    backgroundColor,\n    cookieMessage,\n    cookieHeadline,\n    cookieAcceptButtonText = \"Accept Cookies\",\n    cookieCustomiseButtonText = \"Customise Cookies\",\n    cookieSelectedAcceptButtonText = \"Accept selected cookies\",\n    policyLink,\n    policyLinkText = \"Policy data\",\n    necessaryText = \"Necessary\",\n    preferencesText = \"Preferences\",\n    statisticsText = \"Statistics\",\n    marketingText = \"Marketing\",\n    necessaryDescription = \"\",\n    preferencesDescription = \"\",\n    statisticsDescription = \"\",\n    marketingDescription = \"\",\n    onAcceptPreferences,\n    onAcceptStatistics,\n    onAcceptMarketing,\n    onAccept,\n    setPreferencesOption = true,\n    setMarketingOption = true,\n    setStatisticsOption = true\n}): React.ReactElement<CookieProps> => {\n\n    // React States\n    const ref = React.useRef<HTMLDivElement>(null);\n    const [show, setShow] = React.useState<boolean>(true);\n    const [customise, setCustomise] = React.useState<boolean>(false);\n    const [preferences, setPreferences] = React.useState<boolean>(false);\n    const [statistics, setStatistics] = React.useState<boolean>(false);\n    const [marketing, setMarketing] = React.useState<boolean>(false);\n\n    // FUNCTIONS\n    // read defaults\n    React.useEffect(() => {\n        const cookie = getCookie(\"cookie-law\");\n        if (cookie) {\n            setShow(false);\n            onAccept();\n            const SelectedCookies = JSON.parse(cookie);\n            if (SelectedCookies.preferences === true) {\n                onAcceptPreferences();\n            }\n            if (SelectedCookies.statistics === true) {\n                onAcceptStatistics();\n            }\n            if (SelectedCookies.marketing === true) {\n                onAcceptMarketing();\n            }\n        }\n        else {\n            setShow(true);\n        }\n    }, []);\n\n    const cookieAccept = () => {\n        setShow(false);\n        onAccept();\n        onAcceptMarketing();\n        onAcceptStatistics();\n        onAcceptPreferences();\n        setCookieConsent(true);\n    }\n\n    const cookieCustomise = () => {\n        setCustomise(!customise);\n    }\n\n    const cookieSelectedAccept = () => {\n        if (preferences === true) {\n            onAcceptPreferences();\n        }\n        if (statistics === true) {\n            onAcceptStatistics();\n        }\n        if (marketing === true) {\n            onAcceptMarketing();\n        }\n        setShow(false);\n        setCookieConsent(false);\n\n    }\n\n    const setCookieConsent = (all:boolean = false) => {\n        if(!all){\n        return setCookie(\"cookie-law\", JSON.stringify({ preferences: preferences, statistics: statistics, marketing: marketing }), 30);\n        }\n        return setCookie(\"cookie-law\", JSON.stringify({ preferences: true, statistics: true, marketing: true }), 30);\n    }\n    // OUTPUT\n    if (show) {\n        return (\n            <CookieWrapper ref={ref} backgroundColor={backgroundColor} cookieDirection={cookieDirection} fullSize={customise ? true : false} >\n                <CookieHeadline>{cookieHeadline}</CookieHeadline>\n                <CookieBody>{cookieMessage}</CookieBody>\n                {policyLink && <a target=\"_blank\" href={policyLink}>{policyLinkText}</a>}\n                {!customise &&\n                    <CookieRow>\n                        <CookieButton onClick={cookieAccept}>{cookieAcceptButtonText}</CookieButton>\n                        <CookieButton onClick={cookieCustomise}>{cookieCustomiseButtonText}</CookieButton>\n                    </CookieRow>\n                }\n                {customise && <CookieCustomise>\n                    <CookieRow width=\"60%\">\n                        <CookieFormGroup>\n                            <label>{necessaryText}</label>\n                            <CookieCheckbox onChange={(e) => console.log(e.target.checked)} checked disabled />\n                            <p>{necessaryDescription}</p>\n                        </CookieFormGroup>\n                       {setPreferencesOption && \n                        <CookieFormGroup>\n                            <label>{preferencesText}</label>\n                            <CookieCheckbox onChange={() => setPreferences(!preferences)} />\n                            <p>{preferencesDescription}</p>\n                        </CookieFormGroup>\n                        }\n                        {setStatisticsOption && \n                        <CookieFormGroup>\n                            <label>{statisticsText}</label>\n                            <CookieCheckbox onChange={() => setStatistics(!statistics)} />\n                            <p>{statisticsDescription}</p>\n                        </CookieFormGroup>\n                        }\n                        {setMarketingOption && \n                        <CookieFormGroup>\n                            <label>{marketingText}</label>\n                            <CookieCheckbox onChange={() => setMarketing(!marketing)} />\n                            <p>{marketingDescription}</p>\n                        </CookieFormGroup>\n                        }\n                    </CookieRow>\n                    <CookieButton onClick={cookieSelectedAccept}>{cookieSelectedAcceptButtonText}</CookieButton>\n                </CookieCustomise>}\n            </CookieWrapper>);\n    }\n    return (<></>);\n}\n\nexport default CookieLaw;\n","import React from 'react'\nimport { Story, Meta } from '@storybook/react';\nimport CookieConsent, {CookieProps} from '../index';\n\n\nexport default {\n  component: CookieConsent,\n  title: 'Components/CookieConsent',\n  argTypes: {\n    cookieDirection: {\n        options: ['Bottom', 'Center', 'Top'],\n        control: { type: 'radio' },\n    },\n  },\n} as Meta;\n\nconst Template:Story<CookieProps> = (args) => (\n<CookieConsent {...args} />\n);\nexport const Cookie = Template.bind({});\n\nCookie.args = {\n    cookieDirection:\"Bottom\",\n    cookieMessage:\"Message\",\n    cookieHeadline:\"Headline\",\n    backgroundColor:\"#fff\",\n\n}\n\nexport const CookieDeutsch = Template.bind({});\n\nCookieDeutsch.args = {\n    policyLink:\"/Datenschutz/04c2deed30d54678a8e4e11b9c06460b\",\n    cookieDirection:\"Bottom\",\n    cookieHeadline:\"Wählen Sie Ihre Cookie-Einstellungen\",\n    cookieAcceptButtonText:\"Cookies akzeptieren\",\n    cookieCustomiseButtonText:\"Cookie-Einstellungen anpassen\",\n    necessaryText:\"Technisch notwendige Cookies\",\n    policyLinkText:\"Datenschutzerklärung\",\n    cookieSelectedAcceptButtonText:\"ausgewählte Cookies akzeptieren\",\n    necessaryDescription:\"Cookies zur Gewährleistung der Betriebsbereitschaft der website können nicht deaktiviert werden, soweit wir sie verwenden, um unsere Dienste bereitzustellen.\",\n    preferencesText:\"Einstellungen\",\n    preferencesDescription:\"Für Persönliche einstellungen auf der Seite.\",\n    statisticsText:\"Statistiken\",\n    statisticsDescription:\"Wir verwenden Cookies auch, um zu verstehen, wie die Kunden unsere Dienste nutzen, damit wir Verbesserungen vornehmen können. Wir verwenden Cookies beispielsweise zur Durchführung von Recherchen und Diagnosen, um die Inhalte, Produkte und Dienste von Ersatz-filter.de zu verbessern und um die Leistung unserer Dienste zu messen und zu verstehen.\",\n    marketingDescription:\"Um unsere Angebote zu verbessern nutzen wir verschiedene Techniken das Kauferlebnis zu erfassen und Ihnen bessere Angebote anzuzeigen.\",\n    cookieMessage:\"Wir verwenden Cookies und ähnliche Tools, die erforderlich sind, um Ihnen Einkäufe zu ermöglichen, Ihr Einkaufserlebnis zu verbessern und unsere Dienste bereitzustellen. Dies wird auch in unseren Cookie-Bestimmungen beschrieben. Wir verwenden diese Cookies auch, um nachzuvollziehen, wie Kunden unsere Dienste nutzen (z. B. durch Messung der Websiteaufrufe), damit wir Verbesserungen vornehmen können.\",\n    backgroundColor:\"#fff\",\n}\n","import styled from 'styled-components';\n\ntype Direction = 'Top' | 'Bottom' | 'Center';\n\ninterface CookieWrapperProps {\n    fullSize:boolean;\n    backgroundColor?: string\n    cookieDirection?: Direction;\n}\ninterface ButtonProps {\n    width?: string;\n}\ninterface RowProps {\n    width?: string;\n}\n\n    //STYLEING\n    export const CookieHeadline = styled.h3`\n        font-size:22px;\n        font-weight:bold;\n        margin:22px 0;\n    `;\n    export const CookieBody = styled.p`\n        padding:0;\n        line-height:26px;\n        font-size:12px;\n    `;\n    export const CookieRow = styled.div<RowProps>`\n        display:flex;\n        flex-direction:row;\n        flex-wrap: wrap;\n        & button:first-child {\n            margin-right:22px;\n        }\n        margin:24px 0;\n    `;\n    export const CookieCustomise = styled.div`\n        display:flex;\n        flex-direction:row;\n        align-items:center;\n        justify-content:space-between;\n        flex-wrap:wrap;\n        width:100%;\n        & button  {\n            background:green;\n            color:#fff;\n            font-weight:bold;\n            &:active {\n                background:#ccc;\n                color:#000;\n            }\n        }\n    `;\n    export const CookieCheckbox = styled.input.attrs({ type: 'checkbox' })`\n    padding:10px;\n    `;\n    export const CookieFormGroup = styled.div`\n    display:flex;\n    flex-direction:column;\n    margin-right:24px;\n    width:auto%;\n    font-weight:bold;\n    & label {\n        margin-bottom:12px;\n        width:100%;\n    }\n    & p {\n        font-size:12px;\n        font-weight:normal;\n        margin-top:12px;\n    }\n    `;\n    export const CookieWrapper = styled.div<CookieWrapperProps>`\n        background: ${(props) => props.backgroundColor ? props.backgroundColor : '#efefef'};\n        position:fixed;\n        width:${(props) => props.cookieDirection ===\"Center\" ? \"60%\" : \"100%\"};\n        @media only screen and (max-width: 786px) {\n            width:${(props) => props.cookieDirection ===\"Center\" ? \"90%\" : \"100%\"};\n        }\n        left:0;\n        border-top:1px solid #ccc;\n        padding: 20px 10vw;\n        transition:ease all 0.3s;\n        bottom: ${(props) => props.cookieDirection ===\"Bottom\" && \"0\"};\n        top: ${(props) => props.cookieDirection === \"Top\" ? \"0\" : props.cookieDirection === \"Center\" && \"50%\"};\n        left: ${(props) => props.cookieDirection ===\"Center\" && \"50%\"};\n        transform: ${(props) => props.cookieDirection ===\"Center\" && \"translate(-50%,-50%)\"};\n        box-shadow:0 0 5vh rgba(0,0,0,0.9);\n        max-height:75vh;\n        padding:42px;\n        padding-bottom: ${(props) => props.fullSize && \"2.5vh\"};\n        overflow:scroll;\n        z-index:999999;\n        \n    `;\n    export const CookieButton = styled.button<ButtonProps>`\n        padding:10px 20px;\n        display:flex;\n        align-items:center;\n        font-size:12px;\n        background:#efefef;\n        border:1px solid #ccc;\n        border-radius:20px;\n        cursor: pointer;\n        margin-bottom:12px;\n        color:#ccc;\n        transition:ease all 0.3s;\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n         -khtml-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        &:active {\n            background:#ccc;\n            color:#fff;\n        }\n        &:first-child {\n            background:green;\n            color:#fff;\n            font-weight:bold;\n            &:active {\n                background:#ccc;\n                color:#000;\n            }\n        }\n`;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;;;;;AAoCA;AAyBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AArBA;AA4BA;AAAA;AAAA;AA7BA;AAVA;AA0CA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAHA;AACA;AAUA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAgBA;AACA;AAKA;AAKA;AASA;AAiBA;AAAA;AAAA;AAGA;AAgBA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}